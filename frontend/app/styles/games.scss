$result-filter-win: brightness(0) saturate(100%) invert(45%) sepia(82%)
  saturate(1136%) hue-rotate(86deg) brightness(97%) contrast(98%);
$result-filter-lose: brightness(0) saturate(100%) invert(22%) sepia(100%)
  saturate(5000%) hue-rotate(0deg) brightness(99%) contrast(126%);

.gameMain {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: center;
}

.formUsername {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: center;

  & > label {
    font-size: 1.5rem;
  }
}

.inputUsername {
  padding: 1rem 1.5rem;
  font-size: 1.2em;
  border: none;
  border-radius: 100vh;
  width: 100%;
}

@keyframes vibrate {
  0% {
    transform: translateX(0);
  }

  25% {
    transform: translateX(-5px);
  }

  50% {
    transform: translateX(5px);
  }

  75% {
    transform: translateX(-5px);
  }

  100% {
    transform: translateX(0);
  }
}

.btnMoves {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  gap: 1rem;
  flex-wrap: wrap;

  & > button {
    background-color: transparent;
    border: none;
    cursor: pointer;
    padding: 1rem;
    margin: 0;
    font-size: 1.2em;
    border-radius: 100vw;
    aspect-ratio: 1;

    &:hover {
      outline: 3px solid rgb(255, 255, 255);
      transition: all 0.2s ease-in-out;
    }

    & > img {
      aspect-ratio: 1;
      user-select: none;
      filter: invert(1);
    }

    &[data-result="win"] {
      &.btnRock[data-playerMove="rock"] > img {
        filter: $result-filter-win;
      }

      &.btnPaper[data-playerMove="paper"] > img {
        filter: $result-filter-win;
      }

      &.btnScissors[data-playerMove="scissors"] > img {
        filter: $result-filter-win;
      }

      &.btnRock[data-computerMove="rock"] > img {
        filter: $result-filter-lose;
      }

      &.btnPaper[data-computerMove="paper"] > img {
        filter: $result-filter-lose;
      }

      &.btnScissors[data-computerMove="scissors"] > img {
        filter: $result-filter-lose;
      }
    }

    &[data-result="lose"] {
      &.btnRock[data-playerMove="rock"] > img {
        filter: $result-filter-lose;
      }

      &.btnPaper[data-playerMove="paper"] > img {
        filter: $result-filter-lose;
      }

      &.btnScissors[data-playerMove="scissors"] > img {
        filter: $result-filter-lose;
      }

      &.btnRock[data-computerMove="rock"] > img {
        filter: $result-filter-win;
      }

      &.btnPaper[data-computerMove="paper"] > img {
        filter: $result-filter-win;
      }

      &.btnScissors[data-computerMove="scissors"] > img {
        filter: $result-filter-win;
      }
    }
  }
}

.btnRock {
  &[data-computerMove="rock"] {
    &[data-result="draw"] {
      animation: vibrate 0.5s;
    }
  }
}

.btnPaper {
  &[data-computerMove="paper"] {
    &[data-result="draw"] {
      animation: vibrate 0.5s;
    }
  }
}

.btnScissors {
  &[data-computerMove="scissors"] {
    &[data-result="draw"] {
      animation: vibrate 0.5s;
    }
  }
}

.btnRock,
.btnPaper,
.btnScissors {
  position: relative;
  transition: transform 0.3s ease;
}

.translate-up {
  animation: translateUp 0.3s forwards;
}

.bump {
  animation: bumpInto 0.5s forwards;
}

@keyframes translateUp {
  0% {
    transform: translateY(0);
  }

  100% {
    transform: translateY(-20px); // Adjust the value as needed
  }
}

@keyframes bumpInto {
  0% {
    transform: translateX(0);
  }

  50% {
    transform: translateX(10px); // Adjust the value as needed for bump
  }

  100% {
    transform: translateX(-10px); // Adjust the value as needed for bump
  }
}

.resultDisplay {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 0rem;

  & > :first-child {
    font-size: 1.5rem;

    &[data-result="win"] {
      color: green;
    }

    &[data-result="lose"] {
      color: red;
    }
  }
}

.stats {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;

  & > div {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    align-items: center;
    gap: 1rem;
  }
}

.buttons {
  background-color: rgb(18, 18, 18);
  cursor: pointer;
  padding: 1rem 1.5rem;
  margin: 0;
  width: fit-content;
  border: none;
  border-radius: 100vw;

  &:hover {
    outline: 2px solid rgb(255, 255, 255);
    transition: all 0.05s ease-in-out;
  }
}
